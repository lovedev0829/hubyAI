[Default]
debug = True
log_level = INFO
log_file  = /var/log/huby/huby_api.log
from_email = support@huby.ai
from_name = huby Support
vectordb_server = 128.199.15.215:5000
vectordb_server_old = 164.90.152.83:5000
collections = applications,application_marketing,application_models,application_ownership,application_runtime,application_source

[OAuth]
access_token_ttl_seconds = 3600

[Office365]
tenant_id = c51d0820-ad41-4a0d-9897-3ffd1e077fa9
token_validation_url = https://login.microsoftonline.com/{tenant_id}/discovery/v2.0/keys

[Slack]
token_validation_url = https://slack.com/api/auth.test

[Google]
token_validation_url = https://oauth2.googleapis.com/tokeninfo?access_token=

[CloudStorage]
bucket = huby_media_files
service_account_key_file = /home/dsharma/huby/backend/utils/huby-app-b5d183396f59.json

[CloudStorageDev]
bucket = huby_media_files_dev
service_account_key_file = utils/huby-app-d42b355bf736.json

[CrawlScrape]
max_pages_to_scrape = 500

[LLM]
url = https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=
key = AIzaSyA5-FmpYjQNzCUrafl9sjtOCp9k3cAbw4I
prompt = As a librarian of Generative Artificial Intelligence products, identify a list of top {} products that are useful for the activity listed in the text below that is enclosed within 3 backquotes (```). These products should not include the products that are listed below in comma separated values and enclosed within 4 backquotes (````). Ignore case and other minor details when you exclude products from this list. The identification of products should be based on the following criteria in the order of importance of good quality ratings, user base, cost, disclosure on privacy policy. For each of the identified products, find the respective product name, a brief product description, owning company name, the URL for the company’s logo, the URL for company website, and a summary of user reviews. Format these elements in a Json format under these respective fields: application, description, company, application_logo_url, product_url, reviews. If you cannot find the URL of a company’s logo, put the value of application_logo_url field as blank. Similarly, if there is no url for company website, put the value of product_url as blank.
prompt_steps = As an expert user of the artificial intelligence product {}, provide step by step instructions in simple language how I can accomplish the following task: 
prompt_webscrape = As a product analyst for generative Artificial Intelligence products, I would like you to research all the 
    the public information for product {1}. This product also has a website {2} that also needs to be scraped for additional analysis. 
    The quality of research is more important than the time you take to do it. This research includes details about the following areas:
    product owning company, system requirements to run this product, its source code information, AI models this product uses,
    and detailed marketing information including the brochure, images and videos of this product. 
    In particular, I would like you to organize this research across a set of fields by different product areas. 
    For the product owning company, I would like you to gather the name of the product owning company, company website URL,
    owner/ lead founder name, owner email information, and owner phone. 
    For system requirements area of the product, the fields include hardware it runs on, what operating system it uses, 
    GPU requirements if it uses GPU, CPU requirements if it uses CPU, minimum memory needed, and required disk space. 
    For the source code of this product, fields include source type (open source or closed source), programming languages used in building this product, 
    location of the source code repository such as a github link if applicable, and product dependencies such as libraries or databases this product uses. 
    For the research area of AI models this product uses, the fields are model name, model version, model type such as LLM or Image Generator 
    or Video Generator or Transcriber, model source whether open source or closed source, and model developing/ model owner company or person.
    For the research area of Marketing information on this product, the fields are the name of the industry that this product belongs to, 
    URL of the product brochure or the URL for its features, URL of the product demonstration video, tutorial URLs which may include URLs for 
    product primer as well, URL of the featured page of the product, its pricing type e.g. Free or Freemium or Paid, a list of important tags that 
    describe its user friendliness or quality, URLs of communities for this product (on Twitter/X, Discord, Slack, Reddit, Facebook etc), 
    the URL for its privacy policy, and the URL of its ethics policy.
    Finally I would like you to organize this research across different areas and their respective fields in JSON format. If there are multiple 
    values for a field, set the value as an array of those values.
    The key for research area product owning company is owner and its fields are owner_company, company_url, owner_name, owner_email, and owner_phone.
    The key for research area product system requirements is runtime and its fields are hardware, operating_system, gpu, cpu, memory and disk. 
    The fields hardware, operating_system, gpu, and cpu each will have an array of values. Fields memory and disk have only single values each.
    The key for research area product source code is source and its fields are source_type, programming_languages, dependencies, and repo. 
    In this case fields programming_languages and dependencies are both of type array and must be treated as such in the output.
    The key for research area product AI models is models which is an array of models, with each model array element as a JSON object. 
    The fields/keys in a particular model include model_name, model_version, model_developer, model_type, and model_version. 
    Note that field model_type is also an array and can have one or more values if it is multi-modal.
    The key for research area marketing is marketing and its fields are industry, brochure, demo, tutorials, featured_page, pricing_type, 
    pricing, tags, communities, images, videos, privacy, and ethics. Here fields industry, demo, tutorials, and tags each will have an array of values. 
    The field communities will be a JSON object itself with the name of the community as the  key and the URL for product community page as the value.
    The field images is an array of image objects. Each image object has the image title or short description as the key and its URL as the value.
    Limit the images array to 5 image objects. Verify that the images you choose actually exist and do NOT return a 404.
    The field videos is also an array of video objects. Each video object has the video title or short description as the key and its URL as the value.
    Ensure that the videos are product related videos and limited to 5 video clips.  Verify that the video clips you choose actually exist and do NOT return a 404.
    Fields pricing_type and pricing are both single value field with multiple values showing up as comma separated.
    The key name for Twitter/X is twitter_x, key name for discord is discord, and for slack it is slack.
    If you do not have a value for a field, set the value of the field as blank. Before sending the results validate that the output is FULLY JSON compatible. Run Python json.loads() on the output to verify.